---
import PageLayout from "@/layouts/PageLayout.astro";
import Intro from "@/components/sections/Intro.astro";
import ServiceItem from "@/components/ServiceItem.astro";
import HighlightSection from "@/components/HighlightSection.astro";
import Card from "@/components/Card.astro";

import { getAllSlugPages, getPageBySlug, } from "@/libs/apiWP";

export async function getStaticPaths() {
  const slugs = await getAllSlugPages();
  return slugs.map((slug: string) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const page = await getPageBySlug(slug);

if (!page) {
  return Astro.redirect("/404");
}

const {
  pageTitle,
  heroTitle,
  heroDescription,
  introTitle,
  introDescription,
  sectionTitle,
  setionDescription,
  sectionButton,
  contentBlocks,
  serviceCards,
} = page;

 const chars = [
  "/src/assets/chars/char1.svg",
  "/src/assets/chars/char2.svg",
  "/src/assets/chars/char3.svg",
  "/src/assets/chars/char4.svg",
  "/src/assets/chars/char5.svg",
  "/src/assets/chars/char6.svg"
];

---

<PageLayout
  pageTitle={pageTitle}
  heroTitle={heroTitle}
  heroDescription={heroDescription}
  slug={slug}     
>
 
  {slug === "que-hacemos" && (
  <Intro introTitle={introTitle} description={introDescription} />

  <section class="inner sevices-container">
    <div class="sevices-wrapper">
      {serviceCards?.map((service:any, i:any) => (
        <article class="item-block">
          <figure class="chars-container">
            <img class="chars" src={chars[i % chars.length]} alt={`char-${i}`} />
          </figure>
          <ServiceItem
            id={service.serviceId}
            title={service.serviceTitle}
            description={service.serviceDescription}  
          />
           <figure class="dotlootie-wrap">
            <dotlottie-wc
            src="/src/assets/lottie/writng.lottie"
            class="dotlootie-container"
            autoplay
            loop
          />
           </figure>
        </article>
      ))}
    </div>
  </section> 
  )}

  


  {slug === "quienes-somos" && (
    <article class="inner">
      {contentBlocks?.map((block: any) => (
      <ServiceItem
        title={block.block_title}
        description={block.block_description}
      />
    ))}
    </article>
  )}

 {slug === "oportunidades-europeas" && (
    <section class="section__cards">
      <article class="inner section__cards__wrapper">
        {
          serviceCards?.map((program: any) => (
            <Card
              id={program.serviceId}
              title={program.serviceName}
              description={program.serviceExcerpt}
              buttonText={program.serviceButton?.buttonText ?? ""}
              url={program.serviceButton.buttonHref}
              target={program.serviceButton.buttonTarget}
            />
          ))
        }
      </article>
    </section> 

    <HighlightSection
         title={sectionTitle}
         description={setionDescription}
         buttonText={sectionButton?.buttonText}
         link={sectionButton?.buttonHref}
         target={sectionButton?.buttonTarget}
    /> 

    <section class="inner">
     <div class="sevices-wrapper">
      {serviceCards?.map((program:any, i:any) => (
        <article class="item-block">
          <figure class="chars-container">
            <img class="chars" src={chars[i % chars.length]} alt={`char-${i}`} />
          </figure>
          <ServiceItem
            id={program.serviceId}
            title={program.serviceTitle}
            description={program.serviceDescription}  
          />
          <figure class="dotlootie-wrap">
            <dotlottie-wc
            src="/src/assets/lottie/writng.lottie"
            class="dotlootie-container"
            autoplay
            loop
          />
          </figure>
        </article>
      ))}
    </div>
    </section> 
  )} 

</PageLayout>


<style>
  section {
    padding-block:var(--space-block);
  }

  
  .sevices-container {
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
  }
  
  .sevices-wrapper {
    position: relative;
    display: grid;
    gap: 2rem;
    inline-size: 100%;

    & .item-block {
      position: relative;
      display: grid; 
      grid-template-columns: 18% 60% 18%;
      justify-content: space-between;

      & .chars-container {
        margin-block-start: 3rem;
        display: flex;
        max-block-size: 12rem;
        grid-column: 1;

      
        > .chars {
          flex:1;
          object-fit: contain;
          max-inline-size: 100%;
        }
      }

      & .dotlootie-wrap {
        position: relative;
        display: flex;
        grid-column: 3;
    
        & .dotlootie-container {
           position: absolute;
           width: 100%;
           height: auto;
           bottom: 1rem;
           left: -10px;
        }
      }

      &:nth-child(odd) {
      grid-auto-flow: dense;  

      > .chars-container {
        grid-column: 3;
    
      }  
      > .dotlootie-wrap {
        grid-column: 1;
      }
    }
    }
  }

  .section__cards {
    display: flex;
    flex-direction: column;
    gap: var(--space-block);
  }

  .section__cards__wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(390px, 1fr));
    gap: 2rem;

    > .card:nth-child(5n + 1) {
      background-color: var(--color-contrast-2);
    }

    > .card:nth-child(5n + 2) {
      background-color: var(--color-accent);
    }

    > .card:nth-child(5n + 3) {
      background-color: var(--color-contrast-1);
    }

    > .card:nth-child(5n + 4) {
      border: solid 2px var(--color-contrast-2);
      background-color: var(--color-base);
      > h3 {
        color: var(--color-contrast-2);
      }
      > .description-card {
        color: var(--color-contrast-2);
      }

      > a {
        border: solid 2px var(--color-contrast-2);
      }
    }
  }
  

@media (max-width: 425px) {

   .item-block {

    grid-template-columns: 1fr !important ;

    &:nth-child(odd) {
      .chars-container{ display: none !important; }
    }

   }

  
  .dotlootie-wrap { display: none !important; }
}
  

</style>
       <script
  src="https://unpkg.com/@lottiefiles/dotlottie-wc@0.8.5/dist/dotlottie-wc.js"
  type="module"
></script>
<!-- <script type="module" src="/src/libs/animation/chars.js"></script> -->