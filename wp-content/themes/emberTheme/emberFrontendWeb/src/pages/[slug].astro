---
import PageLayout from "@/layouts/PageLayout.astro";
import Intro from "@/components/sections/Intro.astro";
import ServiceItem from "@/components/ServiceItem.astro";
import HighlightSection from "@/components/HighlightSection.astro";
import Card from "@/components/Card.astro";

//import { getAllSlugPages, getInfoPage, getAllServices, getAllEUServices } from "@/libs/wp";

import { getAllSlugPages, getPageBySlug, getAllSlugSevices, getServiceBySlug,  } from "@/libs/apiWP";

export async function getStaticPaths() {
  const slugs = await getAllSlugPages();
  return slugs.map((slug: string) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const page = await getPageBySlug(slug);

if (!page) {
  return Astro.redirect("/404");
}

const {
  pageTitle,
  heroTitle,
  heroDescription,
  introTitle,
  introDescription,
  sectionTitle,
  setionDescription,
  sectionButton,
  contentBlocks,
  serviceCards,
} = page;

const slugServices = await getAllSlugSevices({ perPage: 4 });
const slugService = await Promise.all(
  slugServices.map((slug: string) => getServiceBySlug(slug))
);

---

<PageLayout
  pageTitle={pageTitle}
  acfTitle={heroTitle}
  acfDescription={heroDescription}
  slug={slug}     
>
 
  {slug === "que-hacemos" && (
    <Intro introTitle={introTitle} description={introDescription} />

  <article class="inner sevices-wrapper">
    {slugService?.map((service: any) => (
      <ServiceItem
        id={service.serviceSlug}
        title={service.serviceTitle}
        description={service.serviceDescription}
      />
    ))}
  </article> 
  )}


  {slug === "quienes-somos" && (
    <article class="inner">
      {contentBlocks?.map((block: any) => (
      <ServiceItem
        title={block.block_title}
        description={block.block_description}
      />
    ))}
    </article>
  )}

 {slug === "oportunidades-europeas" && (
   <article class="section__cards">
      <section class="inner section__cards__wrapper">
        {
          serviceCards?.map((program: any) => (
            <Card
              id={program.serviceId}
              title={program.serviceName}
              description={program.serviceExcerpt}
              buttonText={program.serviceButton?.buttonText ?? ""}
              url={program.serviceButton.buttonHref}
              target={program.serviceButton.buttonTarget}
            />
          ))
        }
      </section>
  </article> 

   <HighlightSection
        title={sectionTitle}
        description={setionDescription}
        buttonText={sectionButton?.buttonText}
        link={sectionButton?.buttonHref}
        target={sectionButton?.buttonTarget}
    /> 

  <article class="inner">
    {serviceCards?.map((program: any) => (
      <ServiceItem
        id={program.serviceSlug}
        title={program.serviceName}
        description={program.serviceDescription}
      />
    ))}
  </article> 
  )} 

</PageLayout>


<style>
  article {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding-block:var(--space-block);
   
  }

  .sevices-wrapper {
    flex-direction: column-reverse !important;
  }

  .section__cards {
    display: flex;
    flex-direction: column;
    gap: var(--space-block);
  }
  .section__cards__wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    gap: 2rem;

    > .card:nth-child(5n + 1) {
      background-color: var(--color-contrast-2);
    }

    > .card:nth-child(5n + 2) {
      background-color: var(--color-accent);
    }

    > .card:nth-child(5n + 3) {
      background-color: var(--color-contrast-1);
    }

    > .card:nth-child(5n + 4) {
      border: solid 2px var(--color-contrast-2);
      background-color: var(--color-base);
      > h3 {
        color: var(--color-contrast-2);
      }
      > .description-card {
        color: var(--color-contrast-2);
      }

      > a {
        border: solid 2px var(--color-contrast-2);
      }
    }
  }
</style>