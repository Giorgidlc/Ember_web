---
import PageLayout from "@/layouts/PageLayout.astro";
import Intro from "@/components/sections/Intro.astro";
import ServiceItem from "@/components/ServiceItem.astro";
import HighlightSection from "@/components/HighlightSection.astro";
import Card from "@/components/Card.astro";

import { getAllSlugPages, getPageBySlug, getAllSlugSevices, getServiceBySlug,  } from "@/libs/apiWP";

export async function getStaticPaths() {
  const slugs = await getAllSlugPages();
  return slugs.map((slug: string) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const page = await getPageBySlug(slug);

if (!page) {
  return Astro.redirect("/404");
}

const {
  pageTitle,
  heroTitle,
  heroDescription,
  introTitle,
  introDescription,
  sectionTitle,
  setionDescription,
  sectionButton,
  contentBlocks,
  serviceCards,
} = page;

/* const slugServices = await getAllSlugSevices({ perPage: 4 });
const slugService = await Promise.all(
  slugServices.map((slug: string) => getServiceBySlug(slug))
  
);
 */
 const chars = [
  "/src/assets/chars/char1.svg",
  "/src/assets/chars/char2.svg",
  "/src/assets/chars/char3.svg",
  "/src/assets/chars/char4.svg",
  "/src/assets/chars/char5.svg",
  "/src/assets/chars/char6.svg"
];

---

<PageLayout
  pageTitle={pageTitle}
  heroTitle={heroTitle}
  heroDescription={heroDescription}
  slug={slug}     
>
 
  {slug === "que-hacemos" && (
  <Intro introTitle={introTitle} description={introDescription} />

  <article class="inner sevices-container">
    <div class="sevices-wrapper">
      {serviceCards?.map((service:any) => (
        <ServiceItem
          id={service.serviceSlug}
          title={service.serviceTitle}
          description={service.serviceDescription}  
        />
      ))}
    </div>
    <aside class="part-side-block">
        {serviceCards?.map((service, i: any) =>(
          <figure class="chars-container">
            <img class="chars" src={chars[i % chars.length]} alt={`char-${i}`} />
          </figure>
        ))}

        
      
      
    </aside>
  </article> 
  )}


  {slug === "quienes-somos" && (
    <article class="inner">
      {contentBlocks?.map((block: any) => (
      <ServiceItem
        title={block.block_title}
        description={block.block_description}
      />
    ))}
    </article>
  )}

 {slug === "oportunidades-europeas" && (
   <article class="section__cards">
      <section class="inner section__cards__wrapper">
        {
          serviceCards?.map((program: any) => (
            <Card
              id={program.serviceId}
              title={program.serviceName}
              description={program.serviceExcerpt}
              buttonText={program.serviceButton?.buttonText ?? ""}
              url={program.serviceButton.buttonHref}
              target={program.serviceButton.buttonTarget}
            />
          ))
        }
      </section>
  </article> 

   <HighlightSection
        title={sectionTitle}
        description={setionDescription}
        buttonText={sectionButton?.buttonText}
        link={sectionButton?.buttonHref}
        target={sectionButton?.buttonTarget}
    /> 

  <article class="inner">
    {serviceCards?.map((program: any) => (
      <ServiceItem
        id={program.serviceSlug}
        title={program.serviceTitle}
        description={program.serviceDescription}
      />
    ))}
  </article> 
  )} 

</PageLayout>


<style>
  article {
    padding-block:var(--space-block);
  }

  
  .sevices-container {
    display: flex;
    flex-wrap: nowrap;
   justify-content: space-between;
  }
  
  .sevices-wrapper {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .section__cards {
    display: flex;
    flex-direction: column;
    gap: var(--space-block);
  }

  .section__cards__wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(390px, 1fr));
    gap: 2rem;

    > .card:nth-child(5n + 1) {
      background-color: var(--color-contrast-2);
    }

    > .card:nth-child(5n + 2) {
      background-color: var(--color-accent);
    }

    > .card:nth-child(5n + 3) {
      background-color: var(--color-contrast-1);
    }

    > .card:nth-child(5n + 4) {
      border: solid 2px var(--color-contrast-2);
      background-color: var(--color-base);
      > h3 {
        color: var(--color-contrast-2);
      }
      > .description-card {
        color: var(--color-contrast-2);
      }

      > a {
        border: solid 2px var(--color-contrast-2);
      }
    }
  }

  .part-side-block {
    display: grid;
    right: -6em;
    max-block-size: 100%;

    .chars-container {
      margin-block-start: 3rem;
      display: flex;
      align-items: flex-start;

      &:nth-child(1) {
          z-index: 9;
        }
        &:nth-child(2) {
          z-index: 8;
        }
        &:nth-child(3) {
          z-index: 7;
        }
        &:nth-child(4) {
          z-index: 6;
        }
        &:nth-child(5) {
          z-index: 5;
        }
        &:nth-child(6) {
          z-index: 4;
        }

    
      .chars {
        flex:1;
        object-fit: contain;
        min-inline-size: 100%;
      }
    }


  }

</style>

<!-- <script type="module" src="/src/libs/animation/chars.js"></script> -->